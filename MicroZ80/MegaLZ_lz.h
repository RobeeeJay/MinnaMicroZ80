// LZ code types

// just emitting 1 byte
#define OUTBYTE 1
// code of length 1, disp -1..-8
#define LEN1 2
// code of length 2, disp -1..-256
#define LEN2 3
// code of length 3, disp -1..-256
#define LEN3_SHORT 4
// code of length 3, disp -257..-4352
#define LEN3_LONG 5
// code of variable length (4..255), disp -1..-256
#define VARLEN_SHORT 6
// code of variable length (4..255), disp -257..-4352
#define VARLEN_LONG 7

//LZ code descriptor
struct lzcode
{
	UWORD length; // length of code: number of bytes generated by it in output file
	WORD disp; // backward displacement of this code (-1..-4352)
};

//LZ code detailed information
struct lzinfo
{
	ULONG length; // length of code: number of bytes generated by it in output file
	LONG  disp; // backward displacement of this code (-1..-4352)

	ULONG bitsize; // total bit length of LZ code in output file

	ULONG byte; // byte to be outted to the byte part of output stream of 0xFFFFFFFF if no byte in code

	ULONG bits; // bits to be outted to the bit part of output stream (left-aligned)
	ULONG bitsnum; // number of bits

	ULONG type; // type of LZ code (see above)
};


extern struct lzcode codes[256];

void start_lz(void);
void end_lz(void);
void add_lz(LONG,ULONG);
//struct lzcode * make_lz_array(void);

ULONG make_lz_info(UBYTE,struct lzcode *,struct lzinfo *);
